name: Terraform Apply for Azure
on: workflow_dispatch

permissions:
  id-token: write # Require write permission to Fetch an OIDC token.
  contents: read
      
jobs: 
  deploy_site:
    runs-on: ubuntu-latest
    steps:
    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }} 
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
    - name: Azure CLI script
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          RESOURCE_GROUP_NAME=rg_tfstate
          STORAGE_ACCOUNT_NAME=tfstate$RANDOM
          CONTAINER_NAME=tfstate

          az group create --name $RESOURCE_GROUP_NAME --location westeurope
          az storage account create --resource-group $RESOURCE_GROUP_NAME --name $STORAGE_ACCOUNT_NAME --sku Standard_LRS --encryption-services blob
          az storage container create --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT_NAME
          ACCOUNT_KEY=$(az storage account keys list --resource-group $RESOURCE_GROUP_NAME --account-name $STORAGE_ACCOUNT_NAME --query '[0].value' -o tsv)
          
          echo "ARM_ACCESS_KEY=$ACCOUNT_KEY" >> $GITHUB_ENV
          echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> $GITHUB_ENV

    - name: Checkout the repository to the runner
      uses: actions/checkout@v2
    
    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0
        terraform_wrapper: false
    
    - name: Terraform init
      id: init
      run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT_NAME"
      env:
        ARM_ACCESS_KEY: ${{ env.ARM_ACCESS_KEY }}
        STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}

    - name: Terraform plan
      id: plan
      run: terraform plan -no-color -input=false -var "storage_account_name=$STORAGE_ACCOUNT_NAME" -out=tfplan -detailed-exitcode
      continue-on-error: true
      env:
        ARM_ACCESS_KEY: ${{ env.ARM_ACCESS_KEY }}
        STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -input=false -var "storage_account_name=$STORAGE_ACCOUNT_NAME"
      env:
        ARM_ACCESS_KEY: ${{ env.ARM_ACCESS_KEY }}
        STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Shell Script that runs Ansible Playbook
      run: chmod +x ssh_vm.sh && ./ssh_vm.sh 
      env:
        ARM_ACCESS_KEY: ${{ env.ARM_ACCESS_KEY }}
        STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}
        CF_TOKEN: ${{ secrets.CF_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY_TOKEN }}